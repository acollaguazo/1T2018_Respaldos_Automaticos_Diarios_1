/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apprespaldo;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
<<<<<<< HEAD
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.Calendar;
=======
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author crist
 */
public class MenuArchivosRespaldo extends javax.swing.JFrame {
    ClienteFTP cliente;
    DefaultListModel listaSW_GYE,listaROU_GYE,listaROU_UIO,listaTodosDispositivos;
    private Fecha date;
<<<<<<< HEAD
    public AppRespaldo App;
=======
    public Principal principal;
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
    Ping ping;
    /**
     * Creates new form MenuArchivosRespaldo
     */
    public MenuArchivosRespaldo() {
        initComponents();
        this.setLocationRelativeTo(null);  //centra la ventana
        cliente = new ClienteFTP();
            
        listaSW_GYE = new DefaultListModel();
        listaROU_GYE = new DefaultListModel();
        listaROU_UIO = new DefaultListModel();
        listaTodosDispositivos= new DefaultListModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new org.edisoncor.gui.panel.Panel();
        panelRectTranslucido1 = new org.edisoncor.gui.panel.PanelRectTranslucido();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDeArchivosDeRespaldo = new javax.swing.JList<>();
        btnDescargar = new javax.swing.JButton();
        seleccDispositivo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDia = new javax.swing.JTextField();
        txtMes = new javax.swing.JTextField();
        txtAnio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnConsultar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

<<<<<<< HEAD
        jLabel1.setFont(new java.awt.Font("Georgia", 1, 16)); // NOI18N
=======
        jLabel1.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Archivos de configuración respaldados");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jScrollPane1.setViewportView(listaDeArchivosDeRespaldo);

<<<<<<< HEAD
        btnDescargar.setFont(new java.awt.Font("Gill Sans MT", 1, 16)); // NOI18N
        btnDescargar.setText("Descargar");
=======
        btnDescargar.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        btnDescargar.setText("descargar");
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
        btnDescargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDescargarMouseClicked(evt);
            }
        });
        btnDescargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRectTranslucido1Layout = new javax.swing.GroupLayout(panelRectTranslucido1);
        panelRectTranslucido1.setLayout(panelRectTranslucido1Layout);
        panelRectTranslucido1Layout.setHorizontalGroup(
            panelRectTranslucido1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRectTranslucido1Layout.createSequentialGroup()
                .addGroup(panelRectTranslucido1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRectTranslucido1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRectTranslucido1Layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(btnDescargar)))
                .addContainerGap(52, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRectTranslucido1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(66, 66, 66))
        );
        panelRectTranslucido1Layout.setVerticalGroup(
            panelRectTranslucido1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRectTranslucido1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
<<<<<<< HEAD
                .addComponent(btnDescargar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        seleccDispositivo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        seleccDispositivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "todos", "SW_GYE", "ROU_GYE", "ROU_UIO" }));

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DISPOSITIVO");

        jLabel3.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("FECHA");

        txtDia.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
=======
                .addComponent(btnDescargar)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        seleccDispositivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "todos", "SW_GYE", "ROU_GYE", "ROU_UIO" }));

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DISPOSITIVO");

        jLabel3.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("FECHA");

>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
        txtDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiaActionPerformed(evt);
            }
        });

<<<<<<< HEAD
        txtMes.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
=======
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
        txtMes.setText("\n");
        txtMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMesActionPerformed(evt);
            }
        });

<<<<<<< HEAD
        txtAnio.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText(" día    mes     año");

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("en números");

        btnConsultar.setFont(new java.awt.Font("Gill Sans MT", 1, 16)); // NOI18N
=======
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("   dia       mes      año");

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 8)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("en numeros");

        btnConsultar.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

<<<<<<< HEAD
        jLabel6.setFont(new java.awt.Font("Georgia", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Criterios de búsqueda");

        btnCerrar.setFont(new java.awt.Font("Gill Sans MT", 1, 16)); // NOI18N
=======
        jLabel6.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Criterios de busqueda");

        btnCerrar.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
        btnCerrar.setText("CERRAR");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCerrar))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel1Layout.createSequentialGroup()
<<<<<<< HEAD
                                .addGap(136, 136, 136)
                                .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                                .addContainerGap(55, Short.MAX_VALUE)
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
=======
                                .addContainerGap(55, Short.MAX_VALUE)
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(113, 113, 113))
                                    .addGroup(panel1Layout.createSequentialGroup()
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
                                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(panel1Layout.createSequentialGroup()
                                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(seleccDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
<<<<<<< HEAD
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(panel1Layout.createSequentialGroup()
                                                        .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(61, 61, 61))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(101, 101, 101)))))
=======
                                                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(panel1Layout.createSequentialGroup()
                                                            .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                        .addGap(61, 61, 61))))
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
                        .addComponent(panelRectTranslucido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(panelRectTranslucido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seleccDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
<<<<<<< HEAD
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(55, 55, 55)
                        .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
=======
                        .addGap(12, 12, 12)
                        .addComponent(jLabel5)
                        .addGap(47, 47, 47)
                        .addComponent(btnConsultar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(btnCerrar)
                .addContainerGap())
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiaActionPerformed

    private void txtMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMesActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        String DispositivoSelec = (String)seleccDispositivo.getSelectedItem();
        String dia = txtDia.getText();//dia , mes, ano ingresados
        String mes = txtMes.getText();
        String anio = txtAnio.getText();
        
        if(!"".equals(dia) && !"".equals(mes) && !"".equals(anio)){
            if(!(date.imprimirFecha().equals(dia + "_" + mes + "_" + anio))){//valida fecha actual
<<<<<<< HEAD
                //validar si la fecha ingresada sea mayor al de inicio y menor a la actual
                if(!(Integer.parseInt(dia)<App.diaInicioSist && Integer.parseInt(mes)<App.mesInicioSist)){
                    if(Integer.parseInt(dia)<date.getDia() && Integer.parseInt(mes)<date.getMes()){
                        if("SW_GYE".equals(DispositivoSelec)){
                            cliente.changeDirectorio("/home/usuarioFTP/SW_GYE");
                            if(listaSW_GYE.isEmpty()){
                                String fecha = dia + "_" + mes + "_" + anio;
                                cliente.llenarLista(listaSW_GYE);
=======
                //validar di la fecha ingresada sea mayor al de inicio y menor a la actual
                if(!(Integer.parseInt(dia)<principal.diaInicioSist && Integer.parseInt(mes)<principal.mesInicioSist)){
                    if(Integer.parseInt(dia)<date.getDia() && Integer.parseInt(mes)<date.getMes()){
                        if("SW_GYE".equals(DispositivoSelec)){
                            cliente.changeDirectorio("//Documentos/SW_GYE");
                            if(listaSW_GYE.isEmpty()){
                                String fecha = dia + "_" + mes + "_" + anio;
                                cliente.llenarListaxFecha(listaSW_GYE,fecha);
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
                                this.listaDeArchivosDeRespaldo.setModel(listaSW_GYE);
                            }else{
                                this.listaDeArchivosDeRespaldo.setModel(listaSW_GYE);
                            }
                        }
                        else if("ROU_GYE".equals(DispositivoSelec)){
<<<<<<< HEAD
                            cliente.changeDirectorio("/home/usuarioFTP/ROU_GYE");
                            if(listaROU_GYE.isEmpty()){
                                String fecha = dia + "_" + mes + "_" + anio;
                                cliente.llenarLista(listaROU_GYE);
=======
                            cliente.changeDirectorio("//Documentos/ROU_GYE");
                            if(listaROU_GYE.isEmpty()){
                                String fecha = dia + "_" + mes + "_" + anio;
                                cliente.llenarListaxFecha(listaROU_GYE,fecha);
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
                                this.listaDeArchivosDeRespaldo.setModel(listaROU_GYE);
                            }else{
                                this.listaDeArchivosDeRespaldo.setModel(listaROU_GYE);
                            }
                        }
                        else if("ROU_UIO".equals(DispositivoSelec)){
<<<<<<< HEAD
                            cliente.changeDirectorio("/home/usuarioFTP/ROU_UIO");
                            if(listaROU_UIO.isEmpty()){
                                String fecha = dia + "_" + mes + "_" + anio;
                                cliente.llenarLista(listaROU_UIO);
=======
                            cliente.changeDirectorio("//Documentos/ROU_UIO");
                            if(listaROU_UIO.isEmpty()){
                                String fecha = dia + "_" + mes + "_" + anio;
                                cliente.llenarListaxFecha(listaROU_UIO,fecha);
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
                                this.listaDeArchivosDeRespaldo.setModel(listaROU_UIO);
                            }else{
                                this.listaDeArchivosDeRespaldo.setModel(listaROU_UIO);
                            }
                        }
                        else if("todos".equals(DispositivoSelec)){
                            if(listaTodosDispositivos.isEmpty()){
                                String fecha = dia + "_" + mes + "_" + anio;
<<<<<<< HEAD
                                cliente.changeDirectorio("/home/usuarioFTP/SW_GYE");
                                cliente.llenarListaxFecha(listaTodosDispositivos,fecha);
                                
                                cliente.changeDirectorio("/home/usuarioFTP/ROU_GYE");
                                cliente.llenarListaxFecha(listaTodosDispositivos,fecha);
                                
                                cliente.changeDirectorio("/home/usuarioFTP/ROU_UIO");
                                cliente.llenarLista(listaTodosDispositivos);
=======
                                cliente.changeDirectorio("//Documentos/SW_GYE");
                                cliente.llenarListaxFecha(listaTodosDispositivos,fecha);
                                
                                cliente.changeDirectorio("//Documentos/ROU_GYE");
                                cliente.llenarListaxFecha(listaTodosDispositivos,fecha);
                                
                                cliente.changeDirectorio("//Documentos/ROU_UIO");
                                cliente.llenarListaxFecha(listaTodosDispositivos,fecha);
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
                                
                                this.listaDeArchivosDeRespaldo.setModel(listaTodosDispositivos);
                            }else{
                                this.listaDeArchivosDeRespaldo.setModel(listaTodosDispositivos);
                            }
                        }
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Existen archivos de respaldos de configuración del dispositivo de red desde la fecha de ingreso:\n"+
<<<<<<< HEAD
                            App.diaInicioSist+"/"+App.mesInicioSist+"/"+App.anioInicioSist);
=======
                            principal.diaInicioSist+"/"+principal.mesInicioSist+"/"+principal.anioInicioSist);
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
                    String hora = date.getHora()+":"+date.getMinutos()+":"+date.getSegundos();
                    escribirArchivosNoEncontrados("NoFoundFile.txt", DispositivoSelec, date.imprimirFecha(), hora);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "No puede consultar archivos de configuracion de fecha actual");
            }
        }
        else{
            if("SW_GYE".equals(DispositivoSelec)){
<<<<<<< HEAD
                cliente.changeDirectorio("/home/usuarioFTP/SW_GYE");
=======
                cliente.changeDirectorio("//Documentos/SW_GYE");
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
                if(listaSW_GYE.isEmpty()){
                cliente.llenarLista(listaSW_GYE);
                this.listaDeArchivosDeRespaldo.setModel(listaSW_GYE);
                }
                else{
                    this.listaDeArchivosDeRespaldo.setModel(listaSW_GYE);
                }
            }
            else if("ROU_GYE".equals(DispositivoSelec)){
<<<<<<< HEAD
                cliente.changeDirectorio("/home/usuarioFTP/ROU_GYE");
=======
                cliente.changeDirectorio("//Documentos/ROU_GYE");
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
                if(listaROU_GYE.isEmpty()){
                    cliente.llenarLista(listaROU_GYE);
                    this.listaDeArchivosDeRespaldo.setModel(listaROU_GYE);
                }else{
                    this.listaDeArchivosDeRespaldo.setModel(listaROU_GYE);
                }
            }
            else if("ROU_UIO".equals(DispositivoSelec)){
<<<<<<< HEAD
                cliente.changeDirectorio("/home/usuarioFTP/ROU_UIO");
=======
                cliente.changeDirectorio("//Documentos/ROU_UIO");
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
                if(listaROU_UIO.isEmpty()){
                    cliente.llenarLista(listaROU_UIO);
                    this.listaDeArchivosDeRespaldo.setModel(listaROU_UIO);
                }else{
                    this.listaDeArchivosDeRespaldo.setModel(listaROU_UIO);
                }
            }
        }
        
        
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnDescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDescargarActionPerformed

    private void btnDescargarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDescargarMouseClicked
        // TODO add your handling code here:
        String archivo = this.listaDeArchivosDeRespaldo.getSelectedValue();
        if(archivo != null){
            ping = new Ping("192.168.2.20");//ip del servidor
            if(ping.isReachable()){
                this.cliente.descargarArchivoFTP(archivo);
                JOptionPane.showMessageDialog(this, "La descarga se realizó con éxito");
                String hora = date.getHora()+":"+date.getMinutos()+":"+date.getSegundos();
                String dispositivoSelec = (String)seleccDispositivo.getSelectedItem();
<<<<<<< HEAD
                escribirArchivosDescargados("ArchivosDescargados.txt",dispositivoSelec,date.imprimirFecha(),hora);
            }
            else{
                String hora = date.getHora()+":"+date.getMinutos()+":"+date.getSegundos();
                String dispositivoSelec = (String)seleccDispositivo.getSelectedItem();
                escribirArchivosErrorServidor("ErrorConectividadServidor.txt",dispositivoSelec,date.imprimirFecha(),hora);
=======
                escribirArchivosDescargados(dispositivoSelec,date.imprimirFecha(),hora);
            }
            else{
                String hora = date.getHora()+":"+date.getMinutos()+":"+date.getSegundos();
                String dispositivoSelec = (String)seleccDispositivo.getSelectedItem();;
                escribirArchivosErrorServidor(dispositivoSelec,date.imprimirFecha(),hora);
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
                JOptionPane.showMessageDialog(this, "Falla de conexion con el servidor, intentelo de nuevo");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "No ha seleccionado un file para consulta, intente de nuevo");
        }
        
                         
    }//GEN-LAST:event_btnDescargarMouseClicked

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnCerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuArchivosRespaldo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuArchivosRespaldo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuArchivosRespaldo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuArchivosRespaldo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MenuArchivosRespaldo().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnDescargar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaDeArchivosDeRespaldo;
    private org.edisoncor.gui.panel.Panel panel1;
    private org.edisoncor.gui.panel.PanelRectTranslucido panelRectTranslucido1;
    private javax.swing.JComboBox<String> seleccDispositivo;
    private javax.swing.JTextField txtAnio;
    private javax.swing.JTextField txtDia;
    private javax.swing.JTextField txtMes;
    // End of variables declaration//GEN-END:variables

    private void escribirArchivosNoEncontrados(String nombreArchivo, String DispositivoSelec, String fecha, String hora) {
<<<<<<< HEAD
        Path path = Paths.get(nombreArchivo);
        try (BufferedWriter br = Files.newBufferedWriter(path,Charset.defaultCharset(), StandardOpenOption.CREATE_NEW)) {
            br.write(fecha+"-"+hora+"-"+DispositivoSelec+"-"+"Error, no se encontro archivo");
            br.newLine();
        } catch (Exception e) {
            try (BufferedWriter br = Files.newBufferedWriter(path,Charset.defaultCharset(), StandardOpenOption.APPEND)) {
            br.write(fecha+"-"+hora+"-"+DispositivoSelec+"-"+"Error, no se encontro archivo");
            br.newLine();
            }catch (Exception e1) {
                e1.printStackTrace();
            }
        }
    } 
    private void escribirArchivosDescargados(String nombreArchivo,String DispositivoSelec, String fecha, String hora) {
        Path path = Paths.get(nombreArchivo);
        try (BufferedWriter br = Files.newBufferedWriter(path,Charset.defaultCharset(), StandardOpenOption.CREATE_NEW)) {
            br.write(fecha+"-"+hora+"-"+DispositivoSelec+"-"+"Descarga exitosa");
            br.newLine();
        } catch (Exception e) {
            try (BufferedWriter br = Files.newBufferedWriter(path,Charset.defaultCharset(), StandardOpenOption.APPEND)) {
            br.write(fecha+"-"+hora+"-"+DispositivoSelec+"-"+"Descarga exitosa");
            br.newLine();
            }catch (Exception e1) {
                e1.printStackTrace();
            }
        }
    }
    private void escribirArchivosErrorServidor(String nombreArchivo,String DispositivoSelec, String fecha, String hora) {
        Path path = Paths.get(nombreArchivo);
        try (BufferedWriter br = Files.newBufferedWriter(path,Charset.defaultCharset(), StandardOpenOption.CREATE_NEW)) {
            br.write(fecha+"-"+hora+"-"+DispositivoSelec+"-"+"error de conectividad");
            br.newLine();
        } catch (Exception e) {
            try (BufferedWriter br = Files.newBufferedWriter(path,Charset.defaultCharset(), StandardOpenOption.APPEND)) {
            br.write(fecha+"-"+hora+"-"+DispositivoSelec+"-"+"error de conectividad");
            br.newLine();
            }catch (Exception e1) {
                e1.printStackTrace();
            }
        }
        
=======
        File archivo;
        archivo = new File(nombreArchivo);
        try{        
            FileWriter w = new FileWriter(archivo);
            BufferedWriter bw = new BufferedWriter(w);
            PrintWriter wr = new PrintWriter(bw);
            if(archivo.exists()) {//concatenamos en el archivo sin borrar lo existente
                wr.append(fecha+"-"+hora+"-"+DispositivoSelec+"-"+"Error, no se encontro archivo");
            } 
            else {
                wr.write(fecha+"-"+hora+"-"+DispositivoSelec+"-"+"Error, no se encontro archivo");
            }
            wr.close();//ahora cerramos los flujos de canales de datos,
            bw.close();
        }catch(IOException e){
        
        }
    } 
    private void escribirArchivosDescargados(String DispositivoSelec, String fecha, String hora) {
        File archivo;
        archivo = new File("ArchivoDescargados.txt");
        try{        
            FileWriter w = new FileWriter(archivo);
            BufferedWriter bw = new BufferedWriter(w);
            PrintWriter wr = new PrintWriter(bw);
            if(archivo.exists()) {//concatenamos en el archivo sin borrar lo existente
                wr.append(fecha+"-"+hora+"-"+DispositivoSelec+"-"+"Descarga exitosa");
            } 
            else {
                wr.write(fecha+"-"+hora+"-"+DispositivoSelec+"-"+"Descarga exitosa");
            }
            wr.close();//ahora cerramos los flujos de canales de datos,
            bw.close();
        }catch(IOException e){
        
        }
    }
    private void escribirArchivosErrorServidor(String DispositivoSelec, String fecha, String hora) {
        File archivo;
        archivo = new File("ArchivoErrorConectividadServidor.txt");
        try{        
            FileWriter w = new FileWriter(archivo);
            BufferedWriter bw = new BufferedWriter(w);
            PrintWriter wr = new PrintWriter(bw);
            if(archivo.exists()) {//concatenamos en el archivo sin borrar lo existente
                wr.append(fecha+"-"+hora+"-"+DispositivoSelec+"-"+"error de conectividad");
            } 
            else {
                wr.write(fecha+"-"+hora+"-"+DispositivoSelec+"-"+"error de conectividad");
            }
            wr.close();//ahora cerramos los flujos de canales de datos,
            bw.close();
        }catch(IOException e){
        
        }
>>>>>>> ce0a7f8cdd207ddd697df2e58fcddc970d913d83
    }
}
